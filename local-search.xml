<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo 和 github 搭建个人博客</title>
    <link href="/2024/01/03/hexo%20%E5%92%8C%20github%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/01/03/hexo%20%E5%92%8C%20github%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p><strong>本文记录笔者使用 hexo 和 github 搭建个人博客的过程，以便笔者回顾之用，疏漏之处还请读者指出，不定时更新</strong></p><h1 id="奇幻旅程·序章"><a href="#奇幻旅程·序章" class="headerlink" title="奇幻旅程·序章"></a>奇幻旅程·序章</h1><h2 id="hexo-的介绍"><a href="#hexo-的介绍" class="headerlink" title="hexo 的介绍"></a>hexo 的介绍</h2><p>hexo 可以根据源文件(.md 文件)和指定的主题文件（配置文件）生成静态的网页文件(.html, .css, .js)</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>安装 git，nodejs，hexo </p><h1 id="奇幻旅程第一章·启程"><a href="#奇幻旅程第一章·启程" class="headerlink" title="奇幻旅程第一章·启程"></a>奇幻旅程第一章·启程</h1><h2 id="建立本地博客文件"><a href="#建立本地博客文件" class="headerlink" title="建立本地博客文件"></a>建立本地博客文件</h2><p>在本地创建文件夹如 <code>blog</code><br>在 <code>blog</code> 文件夹中选择 <code>open Git Bash here</code> 的命令行打开，接下来的操作均在 <code>git bash</code> 中进行</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span> .../blog <span class="hljs-comment">// 表示在 blog 文件夹下的意思 </span><br><span class="hljs-symbol">$</span> hexo init<br><span class="hljs-symbol">$</span> npm install<br></code></pre></td></tr></table></figure><p>上述两个命令将 <code>blog</code> 文件夹初始化成博客，并安装相应的插件和依赖</p><h2 id="将博客部署到-github-上"><a href="#将博客部署到-github-上" class="headerlink" title="将博客部署到 github 上"></a>将博客部署到 github 上</h2><p>注册 github 账号，并把密钥加到 github 上，然后在 github 上建立一个仓库（仓库名字用个人的github用户名.github.io，见下图）</p><img src="/2024/01/03/hexo%20%E5%92%8C%20github%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/picture_1.jpg" class="" title="注意红圈中的内容"><p>使用下面的命令在 blog 目录中安装用来部署的插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">.../blog</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm install hexo-deployer-git --save</span><br></code></pre></td></tr></table></figure><p>同时修改 <code>blog</code> 下面的 <code>_config.yml</code> 中的 <code>deploy</code> 部分：</p><p>把下面的内容：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Deployment<br>## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span><br>deploy: <br>  type: <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>修改成这个样子：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="hljs-symbol">deploy:</span> <br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repository:</span> git@github.com:用户名/用户名.github.io.git<br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><p>这样之后就可以在本地写博客，部署到 github 上了，具体来说就是：在 <code>\blog\source\_post\</code> 下新建 <code>.md</code> 文件，撰写 <code>.md</code> 文件，之后使用 <code>hexo generate</code> 生成 <code>.html, .css, .js</code> 相关文件存到 <code>\blog\public\</code> 中 ，然后使用 <code>hexo deploy</code> 就可以将 <code>\blog\public</code> 中的文件部署到 <code>github</code> 上了</p><p>注意在建立的仓库中，将 <code>settings</code> 中的 <code>page</code> 中的由 <code>main</code> 生成网页改成由 <code>master</code> 生成网页，如下图所示</p><img src="/2024/01/03/hexo%20%E5%92%8C%20github%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/picture_2.jpg" class="" title="main 改成 master"><h1 id="奇幻旅程第二章·探险"><a href="#奇幻旅程第二章·探险" class="headerlink" title="奇幻旅程第二章·探险"></a>奇幻旅程第二章·探险</h1><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>参考 fluid 主题的用户手册<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://fluid-dev.github.io/hexo-fluid-docs/">[2]</span></a></sup>，采用 <code>$npm install --save hexo-theme-fluid</code> 的方式安装，然后去 <code>fluid</code> 的 <code>GitHub</code> 主页上把这个主题的 <code>_config.yml</code> 复制下来，在本地的 <code>blog</code> 下创建 <code>_config.fluid.yml</code>，并把复制下来的内容全部黏贴到新建的 <code>_config.fluid.yml</code> 中，之后到 blog 下的 <code>_config.yml</code> 中将 <code>theme</code> 选项改成 <code>fluid</code>，之后想要修改配置，只需要修改 <code>_config.fluid.yml</code> 即可</p><h2 id="数学公式渲染"><a href="#数学公式渲染" class="headerlink" title="数学公式渲染"></a>数学公式渲染</h2><p>关于数学公式的渲染问题：由于平常使用的 <code>markdown</code> 编辑器都是集成了 <code>mathjax</code>，因此可以正确渲染形如 <code>$a \times b$</code> $-&gt;$ $a \times b$ 这种语句，但是 <code>hexo</code> 自带的对 <code>markdown</code> 的渲染器并不支持，不过下载的 <code>fluid</code> 主题自带对 <code>mathjax</code> 的支持，因此想要支持 <code>Latex</code> 公式只需在  <code>_config.fluid.yml</code> 中的 <code>math</code> 选项中把 <code>enable: false</code> 改成 <code>enable: true</code> 即可<br>笔者设置为</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">math:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br></code></pre></td></tr></table></figure><p>其中 <code>specific</code> 开启后，只有在文章 Front-matter 里指定 <code>math: true</code> 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>参考 hexo 官方文档<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://hexo.io/zh-cn/docs/asset-folders.html">[1]</span></a></sup></p><h2 id="脚注功能"><a href="#脚注功能" class="headerlink" title="脚注功能"></a>脚注功能</h2><img src="/2024/01/03/hexo%20%E5%92%8C%20github%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/footnote_introduction.jpg" class="" title="脚注功能的说明"><h1 id="奇幻旅程·巨人的肩膀"><a href="#奇幻旅程·巨人的肩膀" class="headerlink" title="奇幻旅程·巨人的肩膀"></a>奇幻旅程·巨人的肩膀</h1><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>1：Error: Spawn failed<br>出现这个错误，有可能是 _config.yml 中 deploy 配置错了，也可能是生成的私钥没有加到 github ssh key 上<br>除此之外，可能上述问题都没有，可能是自身网络的问题或者 github 抽风了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://hexo.io/zh-cn/docs/asset-folders.html">https://hexo.io/zh-cn/docs/asset-folders.html</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://fluid-dev.github.io/hexo-fluid-docs/">https://fluid-dev.github.io/hexo-fluid-docs/</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>others</category>
      
    </categories>
    
    
    <tags>
      
      <tag>others</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
